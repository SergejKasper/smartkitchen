{
  "name": "gridfstore",
  "version": "0.0.2",
  "preferGlobal": false,
  "description": "gridfs with mongoose",
  "main": "lib/gridfstore.js",
  "author": {
    "name": "Jussi Vatjus-Anttila",
    "email": "jussiva@gmail.com"
  },
  "contributors": [
    {
      "name": "Jussi Vatjus-Anttila",
      "email": "jussiva@gmail.com"
    }
  ],
  "keywords": [
    "mongo",
    "GridFS",
    "mongoose"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/jupe/gridfstore.git"
  },
  "dependencies": {
    "mongoose": "*",
    "GridFS": "*",
    "uuid": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "mocha -R list test"
  },
  "readme": "gridfstore\r\n==========\r\n\r\nMongoose with GridFS.  \r\nGridFS is convenient way to store files and it allows all mongodb features like clusters and sharding.\r\nThis library is intended to help GridFS usage with nodejs and mongoose. It allows efficient way to store data, \r\ne.g. on the fly gzipped before storing and when gzipped data is read back gzip can be extracted on the fly.\r\n\r\nInstallation\r\n------------\r\n```\r\nnpm install gridfstore\r\n```\r\n\r\nDocumentation\r\n-------------\r\n```\r\n/*\r\n  register schema\r\n*/\r\ngridfstore.register('collection', myschema);\r\n\r\n/*\r\n  store arguments:\r\n  data                      -> string|buffer|readstream\r\n  options: { gzip: true }   -> gzip input data before store gridfs\r\n*/\r\ngridfstore.store( metadata, data, [options,] callback)\r\n\r\n/* mongoose model */\r\ngridfstore.model   \r\n/*\r\n  read arguments:\r\n  uuid                                    -> store generate uuid as filename\r\n  options: { \r\n    gunzip: Boolean,                      -> gunzip output data before call callback (default: false)\r\n    method: String   ('sync'|'async')     -> get as sync or asyncronously (stream)  (default: sync)\r\n  }\r\n*/\r\ngridfstore.read( uuid, [options,] callback)\r\n```\r\n\r\nUsage\r\n-----\r\n```\r\nvar mongoose  = require('mongoose'),\r\n   gridfstore = require('../lib/gridfstore');\r\n   \r\nvar mymeta = {\r\n  title: {type: String},\r\n  owner: {type: String}\r\n}\r\n\r\ngridfstore.register('test', mymeta);\r\n\r\ngridfstore.store( {filename: 'test1.txt', title: 'example', owner: 'jva'}, \r\n                  'this is file content',\r\n                  function(error, meta){\r\n    //meta == whole metadata from gridfs\r\n});\r\n\r\n```\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jupe/gridfstore/issues"
  },
  "_id": "gridfstore@0.0.2",
  "dist": {
    "shasum": "378b2f96a5eeb72f49777f540da3c8f8d697e269"
  },
  "_from": "gridfstore@",
  "_resolved": "https://registry.npmjs.org/gridfstore/-/gridfstore-0.0.2.tgz"
}
